defaults: &defaults
  environment:
    PROJECT_ID: build-images
    STAGING_CLUSTER_PROJECT_ID: ci-staging-198906
    PRODUCTION_CLUSTER_PROJECT_ID: ci-sample-198806
    CLUSTER_NAME: cluster-app
    COMPUTE_ZONE: asia-northeast1-a
  docker:
    - image: google/cloud-sdk

default_filters: &default_filters
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /^\d\d\d\d\d\d\d\d\_\d*/

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run: echo 'export TAG_NAME=`git describe --tags`' >> $BASH_ENV
      - run: echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
      - run: gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
      - run: gcloud --quiet config set project ${PROJECT_ID}
      - run: gcloud --quiet config set compute/zone ${COMPUTE_ZONE}
      - run: gcloud container builds submit --config=cloudbuild.yaml --substitutions REVISION_ID=$TAG_NAME .
  deploy-staging:
    <<: *defaults
    steps:
      - checkout
      - run: echo 'export TAG_NAME=`git describe --tags`' >> $BASH_ENV
      - run: echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
      - run: gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
      - run: gcloud --quiet config set project ${PROJECT_ID}
      - run: gcloud --quiet config set compute/zone ${COMPUTE_ZONE}
      - run: gcloud --quiet container clusters get-credentials --project ${STAGING_CLUSTER_PROJECT_ID} ${CLUSTER_NAME}
      - run: kubectl patch deployment web -p '{"spec":{"template":{"spec":{"containers":[{"name":"go-sample","image":"gcr.io/build-images/go_sample:'"$TAG_NAME"'"}]}}}}'
  deploy-production:
    <<: *defaults
    steps:
      - checkout
      - run: echo 'export TAG_NAME=`git describe --tags`' >> $BASH_ENV
      - run: echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
      - run: gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
      - run: gcloud --quiet config set project ${PROJECT_ID}
      - run: gcloud --quiet config set compute/zone ${COMPUTE_ZONE}
      - run: gcloud --quiet container clusters get-credentials --project ${PRODUCTION_CLUSTER_PROJECT_ID} ${CLUSTER_NAME}
      - run: kubectl patch deployment web -p '{"spec":{"template":{"spec":{"containers":[{"name":"go-sample","image":"gcr.io/build-images/go_sample:'"$TAG_NAME"'"}]}}}}'
workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          <<: *defaults
      - deploy-staging:
          requires:
            - build
          <<: *defaults
      - hold:
          type: approval
          requires:
            - deploy-staging
          <<: *defaults
      - deploy-production:
          requires:
            - hold
          <<: *defaults
