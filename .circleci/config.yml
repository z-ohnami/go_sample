# # Golang CircleCI 2.0 configuration file
# #
# # Check https://circleci.com/docs/2.0/language-go/ for more details
# version: 2
# jobs:
#   build:
#     docker:
#       # specify the version
#       - image: circleci/golang:1.9
      
#       # Specify service dependencies here if necessary
#       # CircleCI maintains a library of pre-built images
#       # documented at https://circleci.com/docs/2.0/circleci-images/
#       # - image: circleci/postgres:9.4

#     #### TEMPLATE_NOTE: go expects specific checkout path representing url
#     #### expecting it in the form of
#     ####   /go/src/github.com/circleci/go-tool
#     ####   /go/src/bitbucket.org/circleci/go-tool
#     working_directory: /go/src/github.com/z-ohnami/go_sample
#     steps:
#       - checkout

#       # specify any bash command here prefixed with `run: `
#       - run: go get -v -t -d ./...
#       - run: go test -v ./...
version: 2
jobs:
  deploy-job:
    environment:
      PROJECT_ID: ci-sample-198806
      CLUSTER_NAME: cluster-app
      CLOUDSDK_COMPUTE_ZONE: asia-northeast1-a
    working_directory: /tmp/my-project
    docker:
      - image: google/cloud-sdk
    steps:
      - run:
          name: Decode and Store Service Account
          command: echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
      - run:
          command: |
          gcloud --quiet components update
          gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
          gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
          gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
          gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
          docker build -t us.gcr.io/${PROJECT_ID}/go_sample:$CIRCLE_SHA1 .
          docker tag us.gcr.io/${PROJECT_ID}/hello:$CIRCLE_SHA1 us.gcr.io/${PROJECT_ID}/go_sample:latest
       - run:
           name: Deploy Master to GKE
           command: ./deploy.sh

workflows:
  version: 2
  build-deploy:
    jobs:
      - build-job
      - deploy-job:
          requires:
            - build-job
          filters:
            branches:
              only: master

# machine:
#   environment:
#     PROJECT_ID: ci-sample-198806
#     PROJECT_NAME: ci-sample
#     CLUSTER_NAME: cluster-app
#     CLOUDSDK_COMPUTE_ZONE: asia-northeast1-a
#     DEBIAN_FRONTEND: noninteractive
#   services:
#     - docker

# dependencies:
#   pre:
#     - sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update
#     - sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update kubectl
#     - echo $ACCT_AUTH | base64 --decode -i > ${HOME}/account-auth.json
#     - sudo /opt/google-cloud-sdk/bin/gcloud auth activate-service-account --key-file ${HOME}/account-auth.json
#     - sudo /opt/google-cloud-sdk/bin/gcloud config set project $PROJECT_ID
#     - sudo /opt/google-cloud-sdk/bin/gcloud --quiet config set container/cluster $CLUSTER_NAME
#     # Reading the zone from the env var is not working so we set it here
#     - sudo /opt/google-cloud-sdk/bin/gcloud config set compute/zone ${CLOUDSDK_COMPUTE_ZONE}
#     - sudo /opt/google-cloud-sdk/bin/gcloud --quiet container clusters get-credentials $CLUSTER_NAME
#     - docker build -t us.gcr.io/${PROJECT_ID}/go_sample:$CIRCLE_SHA1 .
#     # Using a separate tag command until Docker 1.10 is available on CircleCI, then we can use two tags in the build command above
#     - docker tag us.gcr.io/${PROJECT_ID}/hello:$CIRCLE_SHA1 us.gcr.io/${PROJECT_ID}/go_sample:latest

# deployment:
#   prod:
#     branch: master
#     commands:
#       - ./deploy.sh
