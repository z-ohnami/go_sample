default_environments: &default_environments
  PROJECT_ID: build-images
  CLUSTER_NAME: cluster-app
  COMPUTE_ZONE: asia-northeast1-a

default_images: &default_images
  - image: google/cloud-sdk

default_filters: &default_filters
  branches:
    ignore: /.*/
  tags:
    only: /^\d\d\d\d\d\d\d\d\_\d*/

default_steps: &default_steps
  - checkout
  - run: echo 'export TAG_NAME=`git describe --tags`' >> $BASH_ENV
  - run: echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
  - run: gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
  - run: gcloud --quiet config set project ${PROJECT_ID}
  - run: gcloud --quiet config set compute/zone ${COMPUTE_ZONE}

deploy_steps: &deploy_steps
  - run: gcloud --quiet container clusters get-credentials --project ${CLUSTER_PROJECT_ID} ${CLUSTER_NAME}
  - run: kubectl patch deployment web -p '{"spec":{"template":{"spec":{"containers":[{"name":"go-sample","image":"gcr.io/build-images/go_sample:'"$TAG_NAME"'"}]}}}}'

version: 2
jobs:
  build:
    environment:
      <<: *default_environments
    docker:
      <<: *default_images
    steps:
      <<: *default_steps
      - run: gcloud container builds submit --config=cloudbuild.yaml --substitutions REVISION_ID=$TAG_NAME .
  deploy-staging:
    environment:
      <<: *default_environments
      CLUSTER_PROJECT_ID: ci-staging-198906
    docker:
      <<: *default_images
    steps:
      <<: *default_steps
      <<: *deploy_steps
  deploy-production:
    environment:
      <<: *default_environments
      CLUSTER_PROJECT_ID: ci-sample-198806
    docker:
      <<: *default_images
    steps:
      <<: *default_steps
      <<: *deploy_steps
workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          filters:
            <<: *default_filters
      - deploy-staging:
          requires:
            - build
          filters:
            <<: *default_filters
      - hold:
          type: approval
          requires:
            - deploy-staging
          filters:
            <<: *default_filters
      - deploy-production:
          requires:
            - hold
          filters:
            <<: *default_filters
